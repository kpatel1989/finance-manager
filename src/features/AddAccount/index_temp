import React from 'react';
import {
  Button, Card, Col, Form, Row,
} from 'react-bootstrap';
import { useDispatch } from 'react-redux';
import { addAccount } from '../../store/reducers/Account';
import './AddAccount.css';
import BankAccount from './BankAccount';

const ACCOUNT_TYPES = {
  chequing: 'Chequing',
  savings: 'Savings',
  creditCard: 'Credit Card',
  rrsp: 'RRSP',
  tfsa: 'TFSA',
};

export default class AddAccount extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      accountName: '',
      accountType: '',
      bankName: '',
      accountNumber: '',
      currentAmount: ''
    }
    this.dispatch = useDispatch();
  }
  saveAccount() {
    console.log(this.state);
    this.dispatch(addAccount({
      accountName: this.state.accountName,
      accountType: this.state.accountType,
    }));
  }
  renderFormForAccountType(accountType) {
    switch (accountType) {
      case ACCOUNT_TYPES.chequing:
      case ACCOUNT_TYPES.savings:

        return <BankAccount
          bankName={this.state.bankName}
          accountNumber={this.state.accountNumber}
          currentAmount={this.state.currentAmount}
          onChange={(update) => this.setState(update)}
        />;
      default:
        return '';
    }
  }
  render() {
    return (
      <Card>
        <Card.Body>
          <Card.Title>Add a new account</Card.Title>
          <Form align="left">
            <Form.Group as={Row} controlId="accountName">
              <Form.Label column sm={4}>Account Name</Form.Label>
              <Col sm={8}>
                <Form.Control type="text" placeholder="Enter account name" value={this.state.accountName} onChange={(e) => this.setState({ accountName: e.target.value })} />
              </Col>
            </Form.Group>
            <Form.Group as={Row} controlId="accountType">
              <Form.Label column sm={4}>Account Type</Form.Label>
              <Col sm={8}>
                <Form.Control as="select" custom onChange={(e) => this.setState({ accountType: e.target.value })} value={this.state.accountType}>
                  <option disabled>Select the type of account</option>
                  <option>Chequing</option>
                  <option>Savings</option>
                  <option>Credit Card</option>
                  <option>Pension</option>
                  <option>TFSA</option>
                </Form.Control>
              </Col>
            </Form.Group>
            {this.renderFormForAccountType(this.state.accountType)}
          <Button variant="primary" onClick={() => this.saveAccount()}>Save</Button>
          </Form>
        </Card.Body>
      </Card>
    );
  }
}

